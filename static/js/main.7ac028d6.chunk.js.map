{"version":3,"sources":["screens/Shop.js","screens/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["Shop","props","shopClient","checkoutID","updateShopClient","useState","products","setProducts","undefined","cartSize","setCartSize","useEffect","product","fetchAll","then","_products","checkout","fetch","_checkout","_cartSize","lineItems","map","lineItem","quantity","Fragment","CartIcon","count","index","title","variants","price","style","cursor","fontWeight","onClick","productID","lineItemsToAdd","variantId","addLineItems","addToCart","id","alt","width","src","images","Cart","checkoutURL","cartProducts","setCartProducts","variant","lineItemID","lineItemIdsToRemove","removeLineItems","removeFromCart","image","href","target","App","Date","now","shopClientTimestamp","setShopClientTimestamp","setShopClient","localStorage","getItem","setCheckoutID","setCheckoutURL","Client","buildClient","domain","process","REACT_APP_SHOPIFY_DOMAIN","storefrontAccessToken","REACT_APP_SHOPIFY_ACCESS_TOKEN","create","webUrl","setItem","to","path","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ac028d6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function Shop(props) {\n\n  const {\n    shopClient,\n    checkoutID,\n    updateShopClient\n  } = props;\n\n  const [products, setProducts] = useState([]);\n  const [cartSize, setCartSize] = useState(undefined);\n\n  useEffect(() => {\n    // Fetch all products in your shop\n    shopClient?.product.fetchAll().then((_products) => { setProducts(_products); });\n\n    // Get size of cart\n    if (checkoutID) {\n      shopClient?.checkout.fetch(checkoutID).then((_checkout) => { \n        var _cartSize = 0;\n        _checkout.lineItems.map((lineItem) => {\n          _cartSize += lineItem.quantity;\n        });\n        setCartSize(_cartSize);\n      });\n    }\n  }, []);\n\n  const addToCart = (productID) => {\n    const lineItemsToAdd = [{\n      variantId: productID,\n      quantity: 1\n    }];\n\n    shopClient?.checkout.addLineItems(checkoutID, lineItemsToAdd).then(() => {\n      updateShopClient();\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <h2>About</h2>\n      <CartIcon count={cartSize} />\n      {products.map((product, index) => {\n        return (\n          <div key={index}>\n            <div>{product.title}</div>\n            <div>${product.variants[0].price}</div>\n            { /* Buy now button */ }\n            <div \n              style={{ cursor: 'pointer', fontWeight: 'bold' }} \n              onClick={() => { addToCart(product.variants[0].id)}}\n            >\n              ADD TO CART\n            </div>\n            <img alt={product.title} style={{ width: 300 }} src={product.images[0].src} />\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n}\n\nfunction CartIcon(props) {\n  return (\n    <div>{props.count}</div>\n  );\n}","import React, { useState, useEffect } from \"react\";\n\nexport default function Cart(props) {\n\n  const {\n    shopClient,\n    checkoutID,\n    checkoutURL,\n    updateShopClient\n  } = props;\n\n  const [cartProducts, setCartProducts] = useState([]);\n\n  useEffect(() => {\n    // Fetch all products in your cart\n    if (checkoutID) {\n        shopClient?.checkout.fetch(checkoutID).then((_checkout) => { \n            setCartProducts(_checkout.lineItems);\n        });\n    }\n\n  }, []);\n\n  const removeFromCart = (lineItemID) => {\n    const lineItemIdsToRemove = [ lineItemID ];\n    shopClient?.checkout.removeLineItems(checkoutID, lineItemIdsToRemove).then(() => {\n        updateShopClient();\n    });\n  }\n\n  return (\n    <React.Fragment>\n      <h2>Cart:</h2>\n      <div>\n        {cartProducts.map((lineItem, index) => {\n            return (\n            <div key={index}>\n                <div>{lineItem.title}</div>\n                <div>${lineItem.variant.price}</div>\n                { /* Buy now button */ }\n                <div \n                style={{ cursor: 'pointer', fontWeight: 'bold' }} \n                onClick={() => { removeFromCart(lineItem.id) }}\n                >\n                    Remove from cart\n                </div>\n                <img alt={lineItem.title} style={{ width: 300 }} src={lineItem.variant.image.src} />\n            </div>\n            );\n        })}\n      </div>\n      <a \n        href={checkoutURL}\n        target={'_blank'}\n      >\n        CHECKOUT\n      </a>\n    </React.Fragment>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport Client from 'shopify-buy';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// Screens\nimport Shop from './screens/Shop';\nimport Cart from './screens/Cart';\n\nexport default function App() {\n\n  // Site-Wide State\n  const [shopClientTimestamp, setShopClientTimestamp] = useState(Date.now());\n  const [shopClient, setShopClient] = useState(undefined);\n  const [checkoutID, setCheckoutID] = useState(localStorage.getItem('checkoutID'));\n  const [checkoutURL, setCheckoutURL] = useState(localStorage.getItem('checkoutURL'));\n\n  useEffect(() => {\n    const shopClient = Client.buildClient({\n      domain: process.env.REACT_APP_SHOPIFY_DOMAIN,\n      storefrontAccessToken: process.env.REACT_APP_SHOPIFY_ACCESS_TOKEN\n    });\n    setShopClient(shopClient);\n    setShopClientTimestamp(Date.now());\n\n    if (!checkoutID || !checkoutURL) {\n      shopClient.checkout.create().then((checkout) => {\n        setCheckoutID(checkout.id);\n        setCheckoutURL(checkout.webUrl);\n        updateShopClient();\n        // Persist the cart\n        localStorage.setItem('checkoutID', checkout.id);\n        localStorage.setItem('checkoutURL', checkout.webUrl);\n      });\n    }\n  \n  }, []);\n\n  const updateShopClient = () => {\n    setShopClientTimestamp(Date.now());\n  }\n\n  return (\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/shop\">Shop</Link>\n              </li>\n              <li>\n                <Link to=\"/cart\">Cart</Link>\n              </li>\n            </ul>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/shop\">\n              <Shop \n                key={shopClientTimestamp}\n                shopClient={shopClient}\n                checkoutID={checkoutID}\n                updateShopClient={updateShopClient}\n              />\n            </Route>\n            <Route path=\"/cart\">\n              <Cart \n                key={shopClientTimestamp}\n                shopClient={shopClient}\n                checkoutID={checkoutID}\n                checkoutURL={checkoutURL}\n                updateShopClient={updateShopClient}\n              />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}