[{"/Users/sammy/art_and_commerce_site/src/App.js":"1","/Users/sammy/art_and_commerce_site/src/reportWebVitals.js":"2","/Users/sammy/art_and_commerce_site/src/index.js":"3","/Users/sammy/art_and_commerce_site/src/screens/Shop.js":"4","/Users/sammy/art_and_commerce_site/src/screens/Cart.js":"5"},{"size":2589,"mtime":1610234026226,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610204413488,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1610204413487,"results":"9","hashOfConfig":"7"},{"size":1750,"mtime":1610233945297,"results":"10","hashOfConfig":"7"},{"size":1514,"mtime":1610233971560,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"vsx7zp",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/sammy/art_and_commerce_site/src/App.js",["25"],"import React, { useState, useEffect } from \"react\";\nimport Client from 'shopify-buy';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// Screens\nimport Shop from './screens/Shop';\nimport Cart from './screens/Cart';\n\nexport default function App() {\n\n  // Site-Wide State\n  const [shopClientTimestamp, setShopClientTimestamp] = useState(Date.now());\n  const [shopClient, setShopClient] = useState(undefined);\n  const [checkoutID, setCheckoutID] = useState(localStorage.getItem('checkoutID'));\n  const [checkoutURL, setCheckoutURL] = useState(localStorage.getItem('checkoutURL'));\n\n  useEffect(() => {\n    const shopClient = Client.buildClient({\n      domain: 'sam-ticknor.myshopify.com',\n      storefrontAccessToken: 'f5779285355b465ad1d9c0d57fc050eb'\n    });\n    setShopClient(shopClient);\n    setShopClientTimestamp(Date.now());\n\n    if (!checkoutID || !checkoutURL) {\n      shopClient.checkout.create().then((checkout) => {\n        setCheckoutID(checkout.id);\n        setCheckoutURL(checkout.webUrl);\n        updateShopClient();\n        // Persist the cart\n        localStorage.setItem('checkoutID', checkout.id);\n        localStorage.setItem('checkoutURL', checkout.webUrl);\n      });\n    }\n  \n  }, []);\n\n  const updateShopClient = () => {\n    setShopClientTimestamp(Date.now());\n  }\n\n  return (\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/shop\">Shop</Link>\n              </li>\n              <li>\n                <Link to=\"/cart\">Cart</Link>\n              </li>\n            </ul>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n              renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/shop\">\n              <Shop \n                key={shopClientTimestamp}\n                shopClient={shopClient}\n                checkoutID={checkoutID}\n                updateShopClient={updateShopClient}\n              />\n            </Route>\n            <Route path=\"/cart\">\n              <Cart \n                key={shopClientTimestamp}\n                shopClient={shopClient}\n                checkoutID={checkoutID}\n                checkoutURL={checkoutURL}\n                updateShopClient={updateShopClient}\n              />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}","/Users/sammy/art_and_commerce_site/src/reportWebVitals.js",[],"/Users/sammy/art_and_commerce_site/src/index.js",[],"/Users/sammy/art_and_commerce_site/src/screens/Shop.js",["26","27","28"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function Shop(props) {\n\n  const {\n    shopClient,\n    checkoutID,\n    updateShopClient\n  } = props;\n\n  const [products, setProducts] = useState([]);\n  const [cartSize, setCartSize] = useState(undefined);\n\n  useEffect(() => {\n    // Fetch all products in your shop\n    shopClient?.product.fetchAll().then((_products) => { setProducts(_products); });\n\n    // Get size of cart\n    if (checkoutID) {\n      shopClient?.checkout.fetch(checkoutID).then((_checkout) => { \n        var _cartSize = 0;\n        _checkout.lineItems.map((lineItem) => {\n          _cartSize += lineItem.quantity;\n        });\n        setCartSize(_cartSize);\n      });\n    }\n  }, []);\n\n  const addToCart = (productID) => {\n    const lineItemsToAdd = [{\n      variantId: productID,\n      quantity: 1\n    }];\n\n    shopClient?.checkout.addLineItems(checkoutID, lineItemsToAdd).then(() => {\n      updateShopClient();\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <h2>About</h2>\n      <CartIcon count={cartSize} />\n      {products.map((product, index) => {\n        return (\n          <div key={index}>\n            <div>{product.title}</div>\n            <div>${product.variants[0].price}</div>\n            { /* Buy now button */ }\n            <div \n              style={{ cursor: 'pointer', fontWeight: 'bold' }} \n              onClick={() => { addToCart(product.variants[0].id)}}\n            >\n              ADD TO CART\n            </div>\n            <img alt={product.title} style={{ width: 300 }} src={product.images[0].src} />\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n}\n\nfunction CartIcon(props) {\n  return (\n    <div>{props.count}</div>\n  );\n}","/Users/sammy/art_and_commerce_site/src/screens/Cart.js",["29","30"],"import React, { useState, useEffect } from \"react\";\n\nexport default function Cart(props) {\n\n  const {\n    shopClient,\n    checkoutID,\n    checkoutURL,\n    updateShopClient\n  } = props;\n\n  const [cartProducts, setCartProducts] = useState([]);\n\n  useEffect(() => {\n    // Fetch all products in your cart\n    if (checkoutID) {\n        shopClient?.checkout.fetch(checkoutID).then((_checkout) => { \n            setCartProducts(_checkout.lineItems);\n        });\n    }\n\n  }, []);\n\n  const removeFromCart = (lineItemID) => {\n    const lineItemIdsToRemove = [ lineItemID ];\n    shopClient?.checkout.removeLineItems(checkoutID, lineItemIdsToRemove).then(() => {\n        updateShopClient();\n    });\n  }\n\n  return (\n    <React.Fragment>\n      <h2>Cart:</h2>\n      <div>\n        {cartProducts.map((lineItem, index) => {\n            return (\n            <div key={index}>\n                <div>{lineItem.title}</div>\n                <div>${lineItem.variant.price}</div>\n                { /* Buy now button */ }\n                <div \n                style={{ cursor: 'pointer', fontWeight: 'bold' }} \n                onClick={() => { removeFromCart(lineItem.id) }}\n                >\n                    Remove from cart\n                </div>\n                <img alt={lineItem.title} style={{ width: 300 }} src={lineItem.variant.image.src} />\n            </div>\n            );\n        })}\n      </div>\n      <a \n        href={checkoutURL}\n        target={'_blank'}\n      >\n        CHECKOUT\n      </a>\n    </React.Fragment>\n  );\n}",{"ruleId":"31","severity":1,"message":"32","line":41,"column":6,"nodeType":"33","endLine":41,"endColumn":8,"suggestions":"34"},{"ruleId":"35","severity":1,"message":"36","line":2,"column":10,"nodeType":"37","messageId":"38","endLine":2,"endColumn":19},{"ruleId":"39","severity":1,"message":"40","line":23,"column":44,"nodeType":"41","messageId":"42","endLine":23,"endColumn":46},{"ruleId":"31","severity":1,"message":"43","line":29,"column":6,"nodeType":"33","endLine":29,"endColumn":8,"suggestions":"44"},{"ruleId":"31","severity":1,"message":"45","line":22,"column":6,"nodeType":"33","endLine":22,"endColumn":8,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":54,"column":9,"nodeType":"49","endLine":54,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkoutID' and 'checkoutURL'. Either include them or remove the dependency array.","ArrayExpression",["50"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'checkoutID', 'shopClient?.checkout', and 'shopClient?.product'. Either include them or remove the dependency array.",["51"],"React Hook useEffect has missing dependencies: 'checkoutID' and 'shopClient?.checkout'. Either include them or remove the dependency array.",["52"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"desc":"53","fix":"54"},{"desc":"55","fix":"56"},{"desc":"57","fix":"58"},"Update the dependencies array to be: [checkoutID, checkoutURL]",{"range":"59","text":"60"},"Update the dependencies array to be: [checkoutID, shopClient?.checkout, shopClient?.product]",{"range":"61","text":"62"},"Update the dependencies array to be: [checkoutID, shopClient?.checkout]",{"range":"63","text":"64"},[1243,1245],"[checkoutID, checkoutURL]",[760,762],"[checkoutID, shopClient?.checkout, shopClient?.product]",[468,470],"[checkoutID, shopClient?.checkout]"]